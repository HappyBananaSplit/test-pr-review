REPO: <<pipeline.event.github.repository.owner.login>>/<<pipeline.event.github.repository.name>>
PR NUMBER: <<pipeline.event.github.pull_request.number>>
Perform a comprehensive code review with the following focus areas:
1. **Code Quality**
  - Clean code principles and best practices
  - Proper error handling and edge cases
  - Code readability and maintainability
2. **Security**
  - Check for potential security vulnerabilities
  - Validate input sanitization
  - Review authentication/authorization logic
3. **Performance**
  - Identify potential performance bottlenecks
  - Review database queries for efficiency
  - Check for memory leaks or resource issues
4. **Testing**
  - Verify adequate test coverage
  - Review test quality and edge cases
  - Check for missing test scenarios
5. **Documentation**
  - Ensure code is properly documented
  - Verify README updates for new features
  - Check API documentation accuracy

IMPORTANT: 
- Use the `mcp__github_inline_comment__create_inline_comment` tool to add inline comments for specific code issues. This tool allows you to comment on specific lines in the diff.
- For each issue you find in the code, create an inline comment at the relevant line.
- Only use a general PR comment (via gh pr comment) for overall observations or summary.
- Be constructive and specific in your feedback.
